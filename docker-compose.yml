services:

  worker:
    build:
      context: .
      target: prod
    env_file:
      - .env
    depends_on:
      - temporal
      - temporal-mongo
      - temporal-redis
    networks:
      - temporal-network

  temporal:
    image: temporalio/auto-setup:1.25.2.0
    depends_on:
      - temporal-postgresql
      - qdrant-healthcheck
      - temporal-mongo
      - temporal-redis
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=temporal-postgresql
    networks:
      - temporal-network
    ports:
      - 7233:7233

  temporal-ui:
    image: temporalio/ui:2.31.2
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:8080
    ports:
      - 8080:8080
    networks:
      - temporal-network

  temporal-postgresql:
    image: postgres:12.21
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    networks:
      - temporal-network


  temporal-mongo:
    image: "mongo:6.0.8"
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - temporal-network

  temporal-qdrant:
    image: qdrant/qdrant:v1.9.2
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
    volumes:
      - ./qdrant_data:/qdrant_data
  qdrant-healthcheck:
    restart: always
    image: curlimages/curl:latest
    entrypoint: ["/bin/sh", "-c", "--", "while true; do sleep 30; done;"]
    depends_on:
      - temporal-qdrant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://qdrant:6333/readyz"]
      interval: 10s
      timeout: 2s
      retries: 5
    networks:
      - temporal-network

  temporal-redis:
    image: redis:7.0.11
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 10s
    ports:
      - 6379:6379
    networks:
      - temporal-network

volumes:
  data1:


networks:
  temporal-network:
    driver: bridge
    name: temporal-network